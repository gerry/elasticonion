input {
  redis {
    host => "127.0.0.1"
    type => "onionscan_result"
    data_type => "list"
    key => "logstash"
  }
}

filter {
  if [type] == "onionscan_result" {
    ruby {
      code => "
        if event.to_hash.keys.include?('certificates') and event.to_hash['certificates']
          event.to_hash['certificates'].each_with_index { |v, idx|
            if v['PublicKey'].include?('X')
              event['certificates'][idx]['PublicKey']['X'] = v['PublicKey']['X'].to_s
            end
            if v['PublicKey'].include?('Y')
              event['certificates'][idx]['PublicKey']['Y'] = v['PublicKey']['y'].to_s
            end
            if v['PublicKey'].include?('N')
              event['certificates'][idx]['PublicKey']['N'] = v['PublicKey']['N'].to_s
            end
            if v['PublicKey'].include?('E')
              event['certificates'][idx]['PublicKey']['E'] = v['PublicKey']['E'].to_s
            end
            if v.include?('SerialNumber')
              event['certificates'][idx]['SerialNumber'] = v['SerialNumber'].to_s
            end
            if v['PublicKey'].include?('Curve')
              event['certificates'][idx]['PublicKey']['Curve']['P'] = v['PublicKey']['Curve']['P'].to_s 
              event['certificates'][idx]['PublicKey']['Curve']['N'] = v['PublicKey']['Curve']['N'].to_s 
              event['certificates'][idx]['PublicKey']['Curve']['B'] = v['PublicKey']['Curve']['B'].to_s 
              event['certificates'][idx]['PublicKey']['Curve']['Gx'] = v['PublicKey']['Curve']['Gx'].to_s
              event['certificates'][idx]['PublicKey']['Curve']['Gy'] = v['PublicKey']['Curve']['Gy'].to_s
            end
          }
        end
      "
    }
  }

  mutate {
    remove_field => [ "@timestamp", "@version" ]
  }
}


output {
  elasticsearch { index => "onionscan" }
}
